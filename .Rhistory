}
for (i in 1:100) {
if (i==1) {
plot(coefsSAll[i,],col='black',xlab='Principal Component',ylab='R-Squared',main='Sounds',ylim=c(0,.8))
} else {
points(coefsSAll[i,],col='black')
}
}
#dev.off()
data = read.table('data/training.data',sep=',',skip=2)$V1 # uses sentgen output based on logic of convo (topics, words, phonemes)
dataIn = matrix(0,length(data),6)
dataIn[1:length(data)+(data[1:length(data)]-1)*length(data)] = 1
dataOut = dataIn[2:nrow(dataIn),] # it's prediction (then generation), so take one off
dataIn = dataIn[1:(nrow(dataIn)-1),]
inSize = 6 # 5 "phonemes" and one "end of turn" marker
outSize = 6
resSize = 500
a = 0.3 # leaking rate
l = length(data)-1 # since it's prediction, take one off
cycleTime = 1
Win = matrix(runif(resSize*(1+inSize),-0.5,0.5),resSize) # input to reservoir
W = matrix(runif(resSize*resSize,-0.5,0.5),resSize) # reservoir recurrent connections
rhoW = abs(eigen(W,only.values=TRUE)$values[1]) # singular values of echo state W
W = W * 1.25 / rhoW # set spectral radius of 1 to ensure ES property (Jaeger, 2007)
X = matrix(0,1+inSize+resSize,l) # collect activations on reservoir + input + "on" state
Yt = dataOut[1:l,] # desired output
x = rep(0,resSize)
for (t in 1:(l-1)){
u = t(dataIn[t,])
x = (1-a)*x + a*tanh( Win %*% c(1,u) + W %*% x )
X[,t] = c(1,u,x) # collect reservoir activations
}
reg = 1e-8  # regularization coefficient
X_T = t(X)
# regression coefficients
Wout = t(Yt) %*% X_T %*% solve( X %*% X_T + reg*diag(1+inSize+resSize) )
Y = matrix(0,outSize,l)
for (t in 1:l){
u = dataIn[t,]
x = (1-a)*x + a*tanh( Win %*% c(1,u) + W %*% x)
y = tanh(Wout %*% c(1,u,x))
Y[,t] = y
}
plot(Y[1,],dataOut[,1]) # predicting topic 1 only phoneme
plot(Y[4,],dataOut[,4]) # consistent phoneme (both topics)
plot(Y[5,],dataOut[,5]) # predicting topic 2 only phoneme
plot(Y[6,],dataOut[,6]) # predicting final word; should be hardest
data = read.table('data/test.data',sep=',',skip=2) # uses sentgen output based on logic of convo (topics, words, phonemes)
words = data$V3 # see data file
topics = data$V2
data = data$V1
dataIn = matrix(0,length(data),6)
dataIn[1:length(data)+(data[1:length(data)]-1)*length(data)] = 1
dataOut = dataIn[2:nrow(dataIn),] # it's prediction (then generation), so take one off
dataIn = dataIn[1:(nrow(dataIn)-1),]
l = dim(dataIn)[1]
Y = matrix(0,outSize,l)
xs = c()
for (t in 1:l){
u = dataIn[t,]
x = (1-a)*x + a*tanh( Win %*% c(1,u) + W %*% x)
xs = cbind(xs,x)
y = tanh(Wout %*% c(1,u,x))
Y[,t] = y
}
xsp = prcomp(t(xs)) # find components in activation space used to separate solutions
rsqs = c()
for (i in 1:min(resSize,l)) {
# not bothering with logistic; r^2 is the same in simple reg
rsqs = c(rsqs,summary(lm(topics[2:(l+1)]==1~xsp$x[,i]))$r.squared)
}
d1 = sort(rsqs,index=T,decreasing=T)$ix[1]
d2 = sort(rsqs,index=T,decreasing=T)$ix[2]
convLabels = c("a","b")
labSeq = convLabels[topics]
par(mfrow=c(1,1))
plotDat = xsp$x
plot(plotDat[,d1],plotDat[,d2],type='b',pch=dataOut+1,col='gray',main='Topic-Predictive Components',
xlab=paste('Principal Component',d1),ylab=paste('Principal Component',d2))
points(plotDat[1,d1],plotDat[1,d2],type='p',cex=1.5,pch=15,col='green')
points(plotDat[l,d1],plotDat[l,d2],type='p',cex=1.5,pch=15,col='red')
text(plotDat[,d1],plotDat[,d2],lab=labSeq[2:(l+1)],cex=1)
plotDat = xsp$x
plot(plotDat[,d1],plotDat[,d2],type='b',pch=dataOut+1,col='gray',main='Topic-Predictive Components',
xlab=paste('Principal Component',d1),ylab=paste('Principal Component',d2))
points(plotDat[1,d1],plotDat[1,d2],type='p',cex=1.5,pch=15,col='green')
points(plotDat[l,d1],plotDat[l,d2],type='p',cex=1.5,pch=15,col='red')
text(plotDat[,d1],plotDat[,d2],lab=labSeq[2:(l+1)],cex=1)
td1 = d1 # save for later
rsqs = c()
for (i in 1:min(resSize,l)) {
rsqs = c(rsqs,summary(lm(words[2:(l+1)]==1~xsp$x[,i]))$r.squared)
}
d1 = sort(rsqs,index=T,decreasing=T)$ix[1]
d2 = sort(rsqs,index=T,decreasing=T)$ix[2]
plotDat = xsp$x
plot(plotDat[,d1],plotDat[,d2],type='b',pch=13,cex=.5,col='gray',
xlab=paste('Principal Component',d1),ylab=paste('Principal Component',d2))
points(plotDat[1,d1],plotDat[1,d2],type='p',cex=1.5,pch=15,col='green')
text(plotDat[,d1],plotDat[,d2],lab=words[2:(l+1)],cex=1)
if (d1==td1) {
wd1 = d2
} else {
wd1 = d1
}
plotDat = xsp$x
plotDat
plotDat[,1]
d1
d2
rsqs
rsqs = c()
for (i in 1:min(resSize,l)) {
rsqs = c(rsqs,summary(lm(words[2:(l+1)]==1~xsp$x[,i]))$r.squared)
}
rsqs
i\
i
summary(lm(words[2:(l+1)]==1~xsp$x[,i]))$r.squared
words[2:(l+1)]==1
words
rsqs = c(rsqs,summary(lm(xsp$x[,i]~as.factor(words[2:(l+1)])))$r.squared)
rsqs
### programmed by R. Dale, Jan. 2017
### built from the ESN demonstration code of
# Mantas Lukosevicius 2012, http://minds.jacobs-university.de/mantas
setwd('~/Dropbox/new.projects/multiModal/final-github/emergent-meaning')
seedRand = 50 # one shown in the paper
coefsTAll = c() # coefficients for topic, word, and sound across first 20 PCA components
coefsWAll = c()
coefsSAll = c()
# FOR LOOP FOR 100 SIMULATIONS
for (seedRand in c(round(runif(100)*1000),10)) { # so that figures reflect seed 100 (in paper)
print(seedRand)
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
coefsTAll = rbind(coefsTAll,coefsT)
coefsWAll = rbind(coefsWAll,coefsW)
coefsSAll = rbind(coefsSAll,coefsS)
} # for the seed for loop; comment if doing one seed
# FOR LOOP FOR 100 SIMULATIONS
# if running seed loop, let's do all
#pdf(file="figures/pcs_by_predictors_ALL.pdf",height=6,width=5)
plot(colMeans(coefsTAll),lwd=3,col='gray',type='o',xlab='Principal Component',ylab='R-Squared')
text(4,2,'topics',col='gray',cex=1.5)
points(colMeans(coefsWAll),lwd=3,col=rgb(.5,.5,.5),type='o')
text(5.2,1.2,'words',col=rgb(.5,.5,.5),cex=1.5)
points(colMeans(coefsSAll),lwd=3,col='black',type='o')
text(10,.4,'sounds',col='black',cex=1.5)
#dev.off()
# FOR LOOP FOR 100 SIMULATIONS
#pdf(file="figures/pcs_by_predictors_ALL.pdf",height=4,width=8)
par(mfrow=c(1,3))
for (i in 1:100) {
if (i==1) {
plot(coefsTAll[i,],col='gray',xlab='Principal Component',ylab='R-Squared',main='Topics',ylim=c(0,.8))
} else {
points(coefsTAll[i,],col='gray')
}
}
for (i in 1:100) {
if (i==1) {
plot(coefsWAll[i,],col=rgb(.5,.5,.5),xlab='Principal Component',ylab='R-Squared',main='Words',ylim=c(0,.8))
} else {
points(coefsWAll[i,],col=rgb(.5,.5,.5))
}
}
for (i in 1:100) {
if (i==1) {
plot(coefsSAll[i,],col='black',xlab='Principal Component',ylab='R-Squared',main='Sounds',ylim=c(0,.8))
} else {
points(coefsSAll[i,],col='black')
}
}
#dev.off()
rsqs = c(rsqs,summary(lm(xsp$x[,i])~as.factor(topics[2:(l+1)]))$r.squared)
### programmed by R. Dale, Jan. 2017
### built from the ESN demonstration code of
# Mantas Lukosevicius 2012, http://minds.jacobs-university.de/mantas
setwd('~/Dropbox/new.projects/multiModal/final-github/emergent-meaning')
seedRand = 50 # one shown in the paper
coefsTAll = c() # coefficients for topic, word, and sound across first 20 PCA components
coefsWAll = c()
coefsSAll = c()
# FOR LOOP FOR 100 SIMULATIONS
for (seedRand in c(round(runif(100)*1000),10)) { # so that figures reflect seed 100 (in paper)
print(seedRand)
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
coefsTAll = rbind(coefsTAll,coefsT)
coefsWAll = rbind(coefsWAll,coefsW)
coefsSAll = rbind(coefsSAll,coefsS)
} # for the seed for loop; comment if doing one seed
plot(colMeans(coefsTAll),lwd=3,col='gray',type='o',xlab='Principal Component',ylab='R-Squared')
text(4,2,'topics',col='gray',cex=1.5)
points(colMeans(coefsWAll),lwd=3,col=rgb(.5,.5,.5),type='o')
text(5.2,1.2,'words',col=rgb(.5,.5,.5),cex=1.5)
points(colMeans(coefsSAll),lwd=3,col='black',type='o')
text(10,.4,'sounds',col='black',cex=1.5)
#dev.off()
# FOR LOOP FOR 100 SIMULATIONS
#pdf(file="figures/pcs_by_predictors_ALL.pdf",height=4,width=8)
par(mfrow=c(1,3))
for (i in 1:100) {
if (i==1) {
plot(coefsTAll[i,],col='gray',xlab='Principal Component',ylab='R-Squared',main='Topics',ylim=c(0,.8))
} else {
points(coefsTAll[i,],col='gray')
}
}
for (i in 1:100) {
if (i==1) {
plot(coefsWAll[i,],col=rgb(.5,.5,.5),xlab='Principal Component',ylab='R-Squared',main='Words',ylim=c(0,.8))
} else {
points(coefsWAll[i,],col=rgb(.5,.5,.5))
}
}
for (i in 1:100) {
if (i==1) {
plot(coefsSAll[i,],col='black',xlab='Principal Component',ylab='R-Squared',main='Sounds',ylim=c(0,.8))
} else {
points(coefsSAll[i,],col='black')
}
}
#dev.off()
### programmed by R. Dale, Jan. 2017
### built from the ESN demonstration code of
# Mantas Lukosevicius 2012, http://minds.jacobs-university.de/mantas
setwd('~/Dropbox/new.projects/multiModal/final-github/emergent-meaning')
seedRand = 50 # one shown in the paper
coefsTAll = c() # coefficients for topic, word, and sound across first 20 PCA components
coefsWAll = c()
coefsSAll = c()
# FOR LOOP FOR 100 SIMULATIONS
for (seedRand in c(round(runif(100)*1000),100)) { # so that figures reflect seed 100 (in paper)
print(seedRand)
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
coefsTAll = rbind(coefsTAll,coefsT)
coefsWAll = rbind(coefsWAll,coefsW)
coefsSAll = rbind(coefsSAll,coefsS)
} # for the seed for loop; comment if doing one seed
pdf(file="figures/pcs_by_predictors_ALL.pdf",height=6,width=5)
plot(colMeans(coefsTAll),lwd=3,col='gray',type='o',xlab='Principal Component',ylab='R-Squared')
text(4,2,'topics',col='gray',cex=1.5)
points(colMeans(coefsWAll),lwd=3,col=rgb(.5,.5,.5),type='o')
text(5.2,1.2,'words',col=rgb(.5,.5,.5),cex=1.5)
points(colMeans(coefsSAll),lwd=3,col='black',type='o')
text(10,.4,'sounds',col='black',cex=1.5)
dev.off()
pdf(file="figures/pcs_by_predictors_ALL.pdf",height=4,width=8)
par(mfrow=c(1,3))
for (i in 1:100) {
if (i==1) {
plot(coefsTAll[i,],col='gray',xlab='Principal Component',ylab='R-Squared',main='Topics',ylim=c(0,.8))
} else {
points(coefsTAll[i,],col='gray')
}
}
for (i in 1:100) {
if (i==1) {
plot(coefsWAll[i,],col=rgb(.5,.5,.5),xlab='Principal Component',ylab='R-Squared',main='Words',ylim=c(0,.8))
} else {
points(coefsWAll[i,],col=rgb(.5,.5,.5))
}
}
for (i in 1:100) {
if (i==1) {
plot(coefsSAll[i,],col='black',xlab='Principal Component',ylab='R-Squared',main='Sounds',ylim=c(0,.8))
} else {
points(coefsSAll[i,],col='black')
}
}
dev.off()
seedRand = 100 # one shown in the paper
print(seedRand)
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
seedRand = 69 # one shown in the paper
print(seedRand)
set.seed(seedRand)
print(seedRand)
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
print(which(c(round(runif(100)*1000),100)==seedRand))
### programmed by R. Dale, Jan. 2017
### built from the ESN demonstration code of
# Mantas Lukosevicius 2012, http://minds.jacobs-university.de/mantas
setwd('~/Dropbox/new.projects/multiModal/final-github/emergent-meaning')
seedRand = 69 # one shown in the paper
coefsTAll = c() # coefficients for topic, word, and sound across first 20 PCA components
coefsWAll = c()
coefsSAll = c()
# FOR LOOP FOR 100 SIMULATIONS
for (seedRand in c(round(runif(100)*1000),100)) { # so that figures reflect seed 100 (in paper)
print(which(c(round(runif(100)*1000),100)==seedRand))
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
coefsTAll = rbind(coefsTAll,coefsT)
coefsWAll = rbind(coefsWAll,coefsW)
coefsSAll = rbind(coefsSAll,coefsS)
} # for the seed for loop; comment if doing one seed
seedRand
c(round(runif(100)*1000),100)
which(c(round(runif(100)*1000),100)==seedRand)
c(round(runif(100)*1000),100)
seeds = c(round(runif(100)*1000),100)
### programmed by R. Dale, Jan. 2017
### built from the ESN demonstration code of
# Mantas Lukosevicius 2012, http://minds.jacobs-university.de/mantas
setwd('~/Dropbox/new.projects/multiModal/final-github/emergent-meaning')
seedRand = 69 # one shown in the paper
coefsTAll = c() # coefficients for topic, word, and sound across first 20 PCA components
coefsWAll = c()
coefsSAll = c()
# FOR LOOP FOR 100 SIMULATIONS
seeds = c(round(runif(100)*1000),100)
for (seedRand in seeds) { # so that figures reflect seed 100 (in paper)
print(which(seeds==seedRand))
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
coefsTAll = rbind(coefsTAll,coefsT)
coefsWAll = rbind(coefsWAll,coefsW)
coefsSAll = rbind(coefsSAll,coefsS)
} # for the seed for loop; comment if doing one seed
### programmed by R. Dale, Jan. 2017
### built from the ESN demonstration code of
# Mantas Lukosevicius 2012, http://minds.jacobs-university.de/mantas
setwd('~/Dropbox/new.projects/multiModal/final-github/emergent-meaning')
seedRand = 69 # one shown in the paper
coefsTAll = c() # coefficients for topic, word, and sound across first 20 PCA components
coefsWAll = c()
coefsSAll = c()
# FOR LOOP FOR 100 SIMULATIONS
seeds = c(round(runif(100)*10000),100)
for (seedRand in seeds) { # so that figures reflect seed 100 (in paper)
print(which(seeds==seedRand))
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
coefsTAll = rbind(coefsTAll,coefsT)
coefsWAll = rbind(coefsWAll,coefsW)
coefsSAll = rbind(coefsSAll,coefsS)
} # for the seed for loop; comment if doing one seed
unique(seeds)
length(unique(seeds))
### programmed by R. Dale, Jan. 2017
### built from the ESN demonstration code of
# Mantas Lukosevicius 2012, http://minds.jacobs-university.de/mantas
setwd('~/Dropbox/new.projects/multiModal/final-github/emergent-meaning')
seedRand = 69 # one shown in the paper
coefsTAll = c() # coefficients for topic, word, and sound across first 20 PCA components
coefsWAll = c()
coefsSAll = c()
# FOR LOOP FOR 100 SIMULATIONS
seeds = c(round(runif(100)*10000),100)
for (seedRand in seeds) { # so that figures reflect seed 100 (in paper)
print(which(seeds==seedRand))
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
coefsTAll = rbind(coefsTAll,coefsT)
coefsWAll = rbind(coefsWAll,coefsW)
coefsSAll = rbind(coefsSAll,coefsS)
} # for the seed for loop; comment if doing one seed
pdf(file="figures/pcs_by_predictors_ALL.pdf",height=6,width=5)
plot(colMeans(coefsTAll),lwd=3,col='gray',type='o',xlab='Principal Component',ylab='R-Squared')
text(4,2,'topics',col='gray',cex=1.5)
points(colMeans(coefsWAll),lwd=3,col=rgb(.5,.5,.5),type='o')
text(5.2,1.2,'words',col=rgb(.5,.5,.5),cex=1.5)
points(colMeans(coefsSAll),lwd=3,col='black',type='o')
text(10,.4,'sounds',col='black',cex=1.5)
dev.off()
pdf(file="figures/pcs_by_predictors_ALL.pdf",height=4,width=8)
par(mfrow=c(1,3))
for (i in 1:100) {
if (i==1) {
plot(coefsTAll[i,],col='gray',xlab='Principal Component',ylab='R-Squared',main='Topics',ylim=c(0,.8))
} else {
points(coefsTAll[i,],col='gray')
}
}
for (i in 1:100) {
if (i==1) {
plot(coefsWAll[i,],col=rgb(.5,.5,.5),xlab='Principal Component',ylab='R-Squared',main='Words',ylim=c(0,.8))
} else {
points(coefsWAll[i,],col=rgb(.5,.5,.5))
}
}
for (i in 1:100) {
if (i==1) {
plot(coefsSAll[i,],col='black',xlab='Principal Component',ylab='R-Squared',main='Sounds',ylim=c(0,.8))
} else {
points(coefsSAll[i,],col='black')
}
}
dev.off()
seedRand = 69 # one shown in the paper
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
seedRand = 68 # one shown in the paper
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
seedRand = 67 # one shown in the paper
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
seedRand = 666 # one shown in the paper
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
seedRand = 63 # one shown in the paper
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
seedRand = 62 # one shown in the paper
print(which(seeds==seedRand))
set.seed(seedRand)
system(paste('./data/sentgen data/grammarOfConvo.txt -e 10 -s ',seedRand,' -t data/training'))
system(paste('./data/sentgen data/grammarOfConvo_t1.txt -e 1 -s ',seedRand,' -t data/test1'))
system(paste('./data/sentgen data/grammarOfConvo_t2.txt -e 1 -s ',seedRand,' -t data/test2'))
system('tail -22 data/test2.data > temp')
system('cat data/test1.data temp > data/test.data')
system('rm -f temp data/test1.data data/test2.data data/*.teach')
source('simple_comm_single_run.R')
pdf(file="figures/pcs_by_predictors.pdf",height=6,width=5)
plot(abs(coefsT),lwd=3,col='gray',type='o',xlab='Principal Component',ylab='R-Squared',ylim=c(0,.8))
#text(4,2,'topics',col='gray',cex=1.5)
points(abs(coefsW),lwd=3,col=rgb(.5,.5,.5),type='o')
#text(5.2,1.2,'words',col=rgb(.5,.5,.5),cex=1.5)
points(abs(coefsS),lwd=3,col='black',type='o')
#text(10,.4,'sounds',col='black',cex=1.5)
dev.off()
